@using Backend.Domain.Entities.Agents;
@using Frontend.Web.Services.Authentication;
@using Frontend.Web.Services.Agents;
@using Frontend.Web.Util.Session;
@inject AgentService _agentService
@inject AuthenticationService _authenticationService;
@inject NavigationManager NavigationManager

@if (agents == null)
{
    <Frontend.Web.Components.Loader.LoadingSpinner />
}
else
{
    @foreach (var agent in agents)
    {
        <div class="col-sm-6 col-xl-3">
            <div class="card overflow-hidden rounded-2">
                <div class="card-body pt-3 p-4">
                    <div>
                        <h6 class="fw-bold fs-2 cursor-pointer" @onclick="() => Edit(agent)">
                            CPF ou CNPJ fica aqui
                        </h6>
                    </div>
                    <div>
                        <span class="mb-2 badge rounded-pill font-small bg-info-subtle text-info">Vendor/Employee</span>
                    </div>
                    <div>
                        <h6 class="fw-semibold fs-4 mb-2">
                            @agent.Name
                        </h6>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">

                        <div>
                            <a class="p-2 d-inline-flex cursor-pointer" @onclick="() => Edit(agent)">
                                <i class="ti ti-edit"></i>
                            </a>
                        </div>
                        <div>
                            <a class="p-2 d-inline-flex cursor-pointer">
                                <i class="ti ti-trash-x"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code {
    private IEnumerable<Agent>? agents;
    protected override async Task OnInitializedAsync()
    {
        var context = await _authenticationService.GetContext();
        agents = await _agentService.GetAgents(context.Tenant.Id.ToString());
    }

    private void Edit(Agent agent)
    {
        NavigationManager.NavigateTo($"/agents/edit/{agent.AgentId}");
    }
}
