@using Backend.Domain.Entities.Agents;   
@using Frontend.Web.Services.Authentication;
@using Frontend.Web.Services.Agents;
@inject AgentService _agentService;
@inject NavigationManager navigator;
@inject AuthenticationService _authenticationService;

<div>
    <div class="card p-4">
        <div class="row">
            
            <div class="col-md-9">
                <form>
                    <div class="row">
                        <div class="mb-3 col-sm-3">
                            <label for="name">Name</label>
                            <input type="text" class="form-control" id="name" placeholder="Name" @bind="@Agent.Name">
                        </div>
                        <div class="mb-3 col-sm-3">
                            <div class="mb-3 col-sm-3">
                                <label for="agentTypes" class="form-label">Agent Type</label>
                                <select class="form-select" @bind="@Agent.AgentTypeId">
                                    <option value="" disabled hidden selected>Update the agent type.</option>
                                    @foreach (var agentType in agentTypes)
                                    {
                                        <option value="@agentType.AgentTypeId">@agentType.AgentTypeName</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <button type="button" @onclick="UpdateAgent" class="btn btn-default float-right">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>


@code
{
    [Parameter]
    public Agent Agent { get; set; }
}

@code
{
    public List<AgentType> agentTypes = new List<AgentType>();
    public async Task GetAgentTypes()
    {
        var response = await _agentService.GetAgentTypes();
        agentTypes = response.ToList();
    }
}

@code
{
    public async Task UpdateAgent()
    {
        bool updated = await _agentService.UpdateAgent(Agent);
        if (updated) navigator.NavigateTo(navigator.BaseUri, true);
    }
}