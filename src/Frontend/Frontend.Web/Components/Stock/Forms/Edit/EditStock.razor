@using Backend.Domain.Entities.Stocks;
@using Frontend.Web.Services.Authentication;
@using Frontend.Web.Services.Stocks;
@using Backend.Domain.Enums.MovementType;
@inject StockService _stockService
@inject NavigationManager navigator
@inject AuthenticationService _authenticationService;



<div>
    <div class="card p-4">
        <h5 class="card-title fw-semibold mb-4">Stock details</h5>
        <div class="row">
            <div class="col-md-9">
                <form>
                    @if (Model is null && isLoading)
                    {
                        <Frontend.Web.Components.Loader.LoadingSpinner />
                    }
                    else
                    {
                        <div class="row">
                            <div class="mb-3 col-sm-3">
                                <label for="ProductId">Product ID</label>
                                <input type="text" class="form-control" id="ProductId" placeholder="Product ID" @bind="@Model.ProductId" disabled>
                            </div>
                            <div class="mb-3 col-sm-3">
                                <label for="StockMovementId">Stock ID</label>
                                <input type="text" class="form-control" id="StockMovementId" placeholder="StockMovementId" @bind="@Model.StockMovementId" disabled>
                            </div>
                            <div class="mb-3 col-sm-3">
                                <label for="VariantId">Variant ID</label>
                                <input type="text" class="form-control" id="VariantId" placeholder="VariantId" @bind="@Model.VariantId" disabled>
                            </div>
                            <div class="mb-3 col-sm-3">
                                <label for="AgentId">Agent ID</label>
                                <input type="text" class="form-control" id="AgentId" placeholder="AgenttId" @bind="@Model.AgentId" disabled>
                            </div>

                            <div class="mb-3 col-sm-12">
                                <label for="movementType" class="form-label">Movement Type</label>
                                <select class="form-select" @bind="@Model.MovementType">
                                    <option value="" disabled hidden selected> Movement</option>
                                    @foreach (var movement in MovementTypes.Movementtype)
                                    {
                                        <option value="@movement">@movement</option>
                                    }
                                </select>
                            </div>

                            <div class="mb-3 col-sm-12">
                                <label for="movementStatusId" class="form-label">MovementStatus</label>
                                <select class="form-select" @bind="@Model.MovementStatusId">
                                    <option value="" disabled hidden selected>Status</option>
                                    <option value="1">Available</option>
                                    <option value="2">replacement</option>
                                    <option value="3">sold off</option>
                                    <option value="4">reserved</option>
                                </select>
                            </div>

                            <div class="row">
                                <div class="mb-3 col-sm-3">
                                    <label for="Quantity">Quantity</label>
                                    <input type="number" class="form-control" id="Quantity" placeholder="Quantity" @bind="@Model.Quantity">
                                </div>
                                <!-- Adicione mais campos conforme necessário para editar os detalhes do estoque -->
                            </div>

                        </div>

                        <button type="button" @onclick="UpdateStock" class="btn btn-default float-right">Update</button>
                    }
                </form>
            </div>
        </div>
    </div>
</div>




@code
{
    [Parameter]
    public Backend.Domain.Entities.Stocks.Stock Model { get; set; }

    public bool isLoading;


    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        var context = await _authenticationService.GetContext();
        Model.TenantId = context.Tenant.Id;

        var queryString = navigator.Uri.Split('/').Last();
        Model = await _stockService.GetStock(Model.TenantId.ToString(), Model.StockMovementId.ToString());
        isLoading = false;
    }

    public async Task UpdateStock()
    {
        try
        {
            bool updated = await _stockService.UpdateStock(Model);
            if (updated)
            {
                navigator.NavigateTo("/stock");
            }
        }
        catch (Exception ex)
        {
            throw;
        }
    }
}


