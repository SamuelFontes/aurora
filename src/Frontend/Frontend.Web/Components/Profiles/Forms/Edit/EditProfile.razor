@using Backend.Domain.Entities.Profiles;
@using Frontend.Web.Services.Authentication;
@using Frontend.Web.Services.Contacts;
@inject AuthenticationService _authenticationService;
@inject ContactService _contactService;
@inject NavigationManager navigator;

@* Profile *@
<div class="row m-4">
    <h5 class="card-title fw-semibold mb-4">Profile info</h5>
    @* Finish this *@
    @if (Profile is null)
    {
        @if (isShowProfileComponent)
        {
            <button type="button" class="btn btn-outline-danger mb-4" @onclick="ShowProfileComponent">
                <i class="ti ti-x cursor-pointer p-2"></i> Cancel
            </button>
            <div class="mb-3 col-sm-6">
                <label for="profileName" class="form-label">Profile Name</label>
                <input type="text" class="form-control" id="profileName" placeholder="Profile name" @bind="@NewProfile.DisplayName">
            </div>
            <div class="mb-3 col-sm-6">
                <label for="cpf" class="form-label">CPF</label>
                <input type="text" class="form-control" id="cpf" placeholder="XXX.XXX.XXX-XX" @bind="@NewProfile.CPF">
            </div>
            <div class="mb-3 col-sm-6">
                <label for="profileName" class="form-label">Profile Name</label>
                <input type="text" class="form-control" id="profileName" placeholder="Profile name" @bind="@NewProfile.DisplayName">
            </div>
            <br />
            <div class="mb-3 col-sm-6">
                <button type="button" class="btn btn-default float-right" @onclick="CreateProfile">Save agent profile</button>
            </div>
        }
        else
        {
            <button type="button" class="btn btn-outline-primary mb-4" @onclick="ShowProfileComponent">
                <i class="ti ti-circle-plus cursor-pointer p-2"></i> Create agent profile
            </button>
        }
    }
    else
    {
        <div class="mb-3 col-sm-6">
            <label for="profileName" class="form-label">Profile Name</label>
            <input type="text" class="form-control" id="profileName" placeholder="Profile name" @bind="@Profile.DisplayName">
        </div>
        <div class="mb-3 col-sm-6">
            <label for="cpf" class="form-label">CPF</label>
            <input type="text" class="form-control" id="cpf" placeholder="XXX.XXX.XXX-XX" @bind="@Profile.CPF">
        </div>
        <div class="mb-3 col-sm-6">
            <button type="button" class="btn btn-default float-right" @onclick="UpdateProfile">Save agent profile</button>
        </div>
    }
</div>

<Frontend.Web.Components.Addresses.Forms.Modals.DeletePhoneNumber />
@code
{
    [Parameter]
    public Profile Profile { get; set; }
}

@code
{
    public Profile NewProfile = new Profile();
    public async Task CreateProfile()
    {
        var context = await _authenticationService.GetContext();
        NewProfile.TenantId = context.Tenant.Id;
        Profile response = await _contactService.CreateProfile(NewProfile);

        if (response != null && response.ProfileId != new Guid())
            navigator.NavigateTo(navigator.Uri, true);
    }
}

@code
{
    public async Task UpdateProfile()
    {
        var context = await _authenticationService.GetContext();
        Profile.TenantId = context.Tenant.Id;
        if (await _contactService.UpdateProfile(Profile))
            navigator.NavigateTo(navigator.Uri, true);
    }
}

@code
{
    public bool isShowProfileComponent = false;
    public void ShowProfileComponent() => isShowProfileComponent = !isShowProfileComponent;
}