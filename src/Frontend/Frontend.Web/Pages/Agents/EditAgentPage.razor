@page "/agents/edit/{agentId}"
@using Backend.Domain.Entities.Agents;
@using Backend.Domain.Entities.Contacts;
@using Frontend.Web.Services.Agents;
@using Frontend.Web.Services.Authentication;
@inject NavigationManager NavigationManager
@inject AgentService _agentService
@inject AuthenticationService _authenticationService;

<PageTitle>Aurora - Edit Agent</PageTitle>

<aside class="right-sidebar @formCssClass">
@if (isPhoneNumberSidebar)
{
    <Frontend.Web.Components.Products.Forms.Add.AddProduct CollapseRightSidebar=collapsePhoneNumberForm
        ToggleRightSidebar="TogglePhoneNumberForm" />
}

@if (isEmailSidebar)
{
        <Frontend.Web.Components.ProductVariants.Forms.Add.AddProductVariant CollapseRightSidebar=collapseEmailForm
            ToggleRightSidebar="ToggleEmailForm" />
}
</aside>

<div class="container-fluid">
    @if (isLoading)
    {
        <Frontend.Web.Components.Loader.LoadingSpinner />
    }
    else
    {
        <div class="row">
            <div class="col-lg-6 align-items-strech">
                <div class="card w-100">
                    @* Agent basic info *@
                    <Frontend.Web.Components.Agents.Forms.Edit.EditAgent Agent="Model.Agent" />
                    <div class="border-bottom"></div>
                    @* Profile *@
                    <Frontend.Web.Components.Profiles.Forms.Edit.EditProfile Profile="Model.Agent?.Profile" />
                </div>
            </div>
            <div class="col-lg-6">
                @* Phones *@
                <Frontend.Web.Components.PhoneNumbers.Table.PhoneNumberTable PhoneNumbers="Model.PhoneNumbers" />

                @* Emails *@
                <Frontend.Web.Components.Emails.Table.EmailTable EmailAddresses="Model.EmailAddresses" />
            </div>
        </div>
        @* Address numbers  *@
        <Frontend.Web.Components.Addresses.Table.AddressesTable Addresses="Model.Addresses" />
    }
</div>

@code
{
    [Parameter]
    public string? agentId { get; set; }
}

@code
{
    private string? btnText = "New";
    public string? formCssClass = null;

    public bool isPhoneNumberSidebar = false;
    public bool isEmailSidebar = false;

    private bool collapsePhoneNumberForm = true;
    private void TogglePhoneNumberForm()
    {
        isPhoneNumberSidebar = true;
        isEmailSidebar = false;

        collapseEmailForm = true;
        collapsePhoneNumberForm = !collapsePhoneNumberForm;
        formCssClass = collapsePhoneNumberForm ? null : "show-menu";
        btnText = collapsePhoneNumberForm ? "New" : "Hide menu";
    }

    private bool collapseEmailForm = true;
    private void ToggleEmailForm()
    {
        isPhoneNumberSidebar = false;
        isEmailSidebar = true;

        collapsePhoneNumberForm = true;
        collapseEmailForm = !collapseEmailForm;
        formCssClass = collapseEmailForm ? null : "show-menu";
    }
}

@code
{
    public bool isLoading = true;
    public AgentDetail Model = new AgentDetail();
    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        if (!string.IsNullOrEmpty(agentId)){
            Model = await _agentService.GetAgentWithDetail(agentId.ToString());
        }
        isLoading = false;
    }
}
