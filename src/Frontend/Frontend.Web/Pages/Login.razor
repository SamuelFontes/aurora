@page "/login"
@using Frontend.Web.Repository.Client;
@using Frontend.Web.Util.Session;
@using Backend.Domain.Entities.Authentication.Users.Login.Request;
@using System.Text.Json;
@using System.Text;
@using Backend.Domain.Entities.Authentication.Users.UserContext;
@inject HttpClient _http
@inject SessionStorageAccessor _session
@inject HttpClientRepository _httpClientRepository

<div class="container" style="margin-top:30px">
<div class="col-md-4">
    <div class="panel panel-default">
  <div class="panel-heading"><h3 class="panel-title"><strong>Sign In </strong></h3></div>
  <div class="panel-body">
   <form role="form">
  <div class="form-group">
    <label for="exampleInputEmail1">Username or Email</label>
    <input type="email" class="form-control" id="exampleInputEmail1" placeholder="Enter email" @bind="@model.Username">
  </div>
  <div class="form-group">
    <label for="exampleInputPassword1">Password </label>
    <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password" @bind="@model.Password">
  </div>
  <button type="button" @onclick="SignIn" class="btn btn-default">Sign in</button>
</form>
  </div>
</div>
</div>
</div>


@code {
    private LoginRequest model = new LoginRequest();

    private async void SignIn()
    {
        var response = await _httpClientRepository.Post(model, true);

        // this go to service layer
        var userSession = await response.Content.ReadFromJsonAsync<UserSessionContext>();
        await _session.SetValueAsync("UserSession", JsonSerializer.Serialize(userSession));
    }
}
